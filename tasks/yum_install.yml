---
# tasks file for ansible-role-cuda
#
- name: template in nvidia CUDA repo file
  template: src=nvidia.repo.j2 dest=/etc/yum.repos.d/nvidia.repo owner=root group=root mode=0644 backup=yes

- name: rpm_key rpm_key nvidia CUDA repo gpg keys
  rpm_key: state=present key={{ item }}
  with_items: "{{ cuda_gpg_keys }}"
  when: cuda_gpg_keys.0 != ""

- name: install cuda software - this is slow - restart if cuda_restart_node_on_install is True
  package: name={{ item }} state=present
  with_items: "{{ cuda_packages | default({}) }}"
  when: cuda_packages.0 != ""
  register: cuda_packages_installation
  notify:
   - ZZ CUDA Restart server
   - ZZ CUDA Wait for server to restart

- name: template in cuda_init.sh used during boot
  template: src=cuda_init.sh.j2 
            dest=/usr/local/bin/cuda_init.sh 
            owner=root group=root mode=0755 
            backup=no
  when: cuda_init
  notify:
    - Initialize the GPUs

- name: lineinfile/make sure cuda_init.sh script is absent from rc.local
  lineinfile: 
      dest=/etc/rc.local 
      insertafter="^touch /var/lock/subsys/local" 
      regexp="^/bin/bash /usr/local/bin/cuda_init.sh$"
      line="/bin/bash /usr/local/bin/cuda_init.sh"
      state=absent

- name: template in cuda_init.service systemd script
  template: src=cuda_init.service.j2
            dest=/etc/systemd/system/cuda_init.service
            owner=root group=root mode=0644 
            backup=no
  notify: Restart cuda_init service
  when: cuda_init and ansible_service_mgr == "systemd"

- name: enable the cuda_init systemd service
  service: name=cuda_init enabled=yes
  when: cuda_init and ansible_service_mgr == "systemd"

- name: check if cuda_gpu_name0 ( /dev/nvidia0 ) exists
  stat: path={{ cuda_gpu_name0 }}
  register: reg_cuda_gpu_name0
  always_run: True
  when: cuda_init

- debug: var=reg_cuda_gpu_name0 verbosity=1
  when: cuda_init

- name: Initialize the GPUs  - run cuda_init.sh if there is no /dev/nvidia0 
  command: /bin/bash /usr/local/bin/cuda_init.sh
  when: reg_cuda_gpu_name0.stat.exists is defined and reg_cuda_gpu_name0.stat.exists == False and cuda_init and cuda_init_restart_service

# This is here because if we in the same playbook try to start slurmd without having run the cuda_init.sh script then slurmd doesn't start and the play fails.
- name: flush the handlers - so that the node is rebooted after CUDA is installed and that the GPUs are initialized before we start slurm
  meta: flush_handlers

