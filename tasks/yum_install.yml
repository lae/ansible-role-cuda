---
# tasks file for ansible-role-cuda
- name: Upload packaging key for CUDA repositories
  copy:
    src: cuda_packaging_key.asc
    dest: "{{ cuda_rpm_key_path }}"
    mode: 0644

- name: Trust packaging key for CUDA repositories
  rpm_key:
    key: "{{ cuda_rpm_key_path }}"
    id: "{{ cuda_packaging_key_id }}"
    state: present

- name: Configure CUDA repository for yum-based systems
  yum_repository:
    name: cuda
    description: Official Nvidia CUDA repository
    file: nvidia
    baseurl: "{{ cuda_repo_url }}/{{ cuda_repo_subfolder }}/x86_64/"
    gpgkey: "{{ cuda_rpm_key_path }}"
    gpgcheck: yes
    enabled: yes

- name: install cuda software - this is slow - restart if cuda_restart_node_on_install is True
  package: name={{ item }} state=present
  with_items: "{{ cuda_packages | default({}) }}"
  when: cuda_packages.0 != ""
  register: cuda_packages_installation
  notify:
   - ZZ CUDA Restart server
   - ZZ CUDA Wait for server to restart

- name: template in cuda_init.sh used during boot
  template: src=cuda_init.sh.j2 
            dest=/usr/local/bin/cuda_init.sh 
            owner=root group=root mode=0755 
            backup=no
  when: cuda_init
  notify:
    - Initialize the GPUs

- name: lineinfile/make sure cuda_init.sh script is absent from rc.local
  lineinfile: 
      dest=/etc/rc.local 
      insertafter="^touch /var/lock/subsys/local" 
      regexp="^/bin/bash /usr/local/bin/cuda_init.sh$"
      line="/bin/bash /usr/local/bin/cuda_init.sh"
      state=absent

- name: template in cuda_init.service systemd script
  template: src=cuda_init.service.j2
            dest=/etc/systemd/system/cuda_init.service
            owner=root group=root mode=0644 
            backup=no
  when: cuda_init

- name: enable the cuda_init systemd service
  service: name=cuda_init enabled=yes state=started 
  when: cuda_init

- name: check if cuda_gpu_name0 ( /dev/nvidia0 ) exists
  stat: path={{ cuda_gpu_name0 }}
  register: reg_cuda_gpu_name0
  always_run: True
  when: cuda_init

- debug: var=reg_cuda_gpu_name0 verbosity=1
  when: cuda_init

- name: Initialize the GPUs  - run cuda_init.sh if there is no /dev/nvidia0 
  command: /bin/bash /usr/local/bin/cuda_init.sh
  when: reg_cuda_gpu_name0.stat.exists is defined and reg_cuda_gpu_name0.stat.exists == False and cuda_init

# This is here because if we in the same playbook try to start slurmd without having run the cuda_init.sh script then slurmd doesn't start and the play fails.
- name: flush the handlers - so that the node is rebooted after CUDA is installed and that the GPUs are initialized before we start slurm
  meta: flush_handlers

